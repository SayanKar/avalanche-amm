{"version":3,"sources":["constants.js","components/BoxTemplate.jsx","components/SwapComponent.jsx","components/ProvideComponent.jsx","components/WithdrawComponent.jsx","components/FaucetComponent.jsx","components/ContainerComponent.jsx","App.js","index.js"],"names":["PRECISION","RE","CONTRACT_ADDRESS","abi","BoxTemplate","props","className","leftHeader","value","onChange","e","target","test","onInputChange","placeholder","right","SwapComponent","useState","coin","setCoin","amountFrom","setAmountFrom","amountTo","setAmountTo","getSwapEstimateAmountTo","val","a","includes","contract","getSwapToken1Estimate","estimateOfAmountTo","getSwapToken2Estimate","alert","data","message","getSwapEstimateAmountFrm","getSwapToken1EstimateGivenToken2","estimateOfAmountFrm","getSwapToken2EstimateGivenToken1","onSwap","swapToken1","response","swapToken2","wait","getHoldings","onClick","reverse","ProvideComponent","amountOfKar","setAmountOfKar","amountOfKothi","setAmountOfKothi","error","setError","getProvideEstimate","token","getEquivalentToken2Estimate","estimate","getEquivalentToken1Estimate","provide","onChangeAmountOfKar","onChangeAmountOfKothi","WithdrawComponent","amountOfShare","setAmountOfShare","estimateTokens","setEstimateTokens","onChangeAmountOfShare","getWithdrawEstimate","amountToken1","amountToken2","getMaxShare","maxShare","withdrawShare","withdraw","console","log","length","FaucetComponent","faucet","res","onClickFund","ContainerComponent","activeTab","setActiveTab","amountOfKAR","setAmountOfKAR","amountOfKOTHI","setAmountOfKOTHI","totalKAR","setTotalKAR","totalKOTHI","setTotalKOTHI","totalShare","setTotalShare","getMyHoldings","myShare","getPoolDetails","useEffect","changeTab","tab","App","provider","signer","add","myContract","setMyContract","address","setAddress","connect","connectToMetamask","ethers","providers","Web3Provider","window","ethereum","getSigner","getAddress","Contract","err","enable","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ba1bbd0.chunk.js","sourcesContent":["export const PRECISION = 1000000;\nexport const RE = /^[0-9]*[.]?[0-9]{0,6}$/;\n// Replace the below address with the address of the contract you deployed \nexport const CONTRACT_ADDRESS = \"0x806D6B235C33c6B5b82EcD3B11509eFeC61BF643\";\nexport const abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken1\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"faucet\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken1\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"provide\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"share\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapToken1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"swapToken2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_share\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdraw\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken1\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getEquivalentToken1Estimate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reqToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getEquivalentToken2Estimate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"reqToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getMyHoldings\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken1\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken2\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"myShare\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolDetails\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSwapToken1Estimate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSwapToken1EstimateGivenToken2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSwapToken2Estimate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amountToken1\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSwapToken2EstimateGivenToken1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_share\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getWithdrawEstimate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken1\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amountToken2\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n","import \"../styles.css\";\nimport { RE } from \"../constants\";\n\nexport default function BoxTemplate(props) {\n    const onInputChange = (e) => {\n        if (e.target.value === \"\" || RE.test(e.target.value)) {\n            props.onChange(e);\n        }\n    };\n    return (\n        <div className=\"boxTemplate\">\n            <div className=\"boxBody\">\n                <div>\n                    <p className=\"leftHeader\"> {props.leftHeader} </p>\n                    <input\n                        className=\"textField\"\n                        value={props.value}\n                        onChange={(e) => onInputChange(e)}\n                        placeholder={\"Enter amount\"}\n                    />\n                </div>\n                <div className=\"rightContent\">{props.right}</div>\n            </div>\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport { MdSwapVert } from \"react-icons/md\";\nimport \"../styles.css\";\nimport BoxTemplate from \"./BoxTemplate\";\nimport { PRECISION } from \"../constants\";\n\nexport default function SwapComponent(props) {\n    const [coin, setCoin] = useState([\"KAR\", \"KOTHI\"]);\n    const [amountFrom, setAmountFrom] = useState(0.0);\n    const [amountTo, setAmountTo] = useState(0.0);\n\n    const rev = () => {\n        setCoin([...coin.reverse()]);\n        getSwapEstimateAmountTo(amountFrom);\n    };\n\n    // Given amount of token in AmountFrom, estimates amount of token in amountTo, i.e. tokens recieved after swap\n    const getSwapEstimateAmountTo = async (val) => {\n        if ([\"\", \".\"].includes(val)) return;\n        if (props.contract !== null) {\n            try {\n                let estimateOfAmountTo;\n                if (coin[0] === \"KAR\") {\n                    estimateOfAmountTo = await props.contract.getSwapToken1Estimate(\n                        val * PRECISION\n                    );\n                } else {\n                    estimateOfAmountTo = await props.contract.getSwapToken2Estimate(\n                        val * PRECISION\n                    );\n                }\n                setAmountTo(estimateOfAmountTo / PRECISION);\n            } catch (err) {\n                alert(err?.data?.message);\n            }\n        }\n    };\n\n    // Given amount of tokens in amountTo, i.e. the amount recieved after swap, estimates the amount of tokens in amountFrom\n    const getSwapEstimateAmountFrm = async (val) => {\n        if ([\"\", \".\"].includes(val)) return;\n        if (props.contract !== null) {\n            try {\n                let estimateOfAmountFrm;\n                if (coin[0] === \"KAR\") {\n                    estimateOfAmountFrm =\n                        await props.contract.getSwapToken1EstimateGivenToken2(\n                            val * PRECISION\n                        );\n                } else {\n                    estimateOfAmountFrm =\n                        await props.contract.getSwapToken2EstimateGivenToken1(\n                            val * PRECISION\n                        );\n                }\n                setAmountFrom(estimateOfAmountFrm / PRECISION);\n            } catch (err) {\n                alert(err?.data?.message);\n            }\n        }\n    };\n\n    const onChangeAmtFrm = (val) => {\n        setAmountFrom(val.target.value);\n        getSwapEstimateAmountTo(val.target.value);\n    };\n\n    const onChangeAmtTo = (val) => {\n        setAmountTo(val.target.value);\n        getSwapEstimateAmountFrm(val.target.value);\n    };\n\n    // Helps swap a token to another.\n    const onSwap = async () => {\n        if ([\"\", \".\"].includes(amountFrom)) {\n            alert(\"Amount should be a valid number\");\n            return;\n        }\n        if (props.contract === null) {\n            alert(\"Connect to Metamask\");\n            return;\n        } else {\n            try {\n                let response;\n                if (coin[0] === \"KAR\") {\n                    response = await props.contract.swapToken1(amountFrom * PRECISION);\n                } else {\n                    response = await props.contract.swapToken2(amountFrom * PRECISION);\n                }\n                await response.wait();\n                setAmountFrom(0);\n                setAmountTo(0);\n                await props.getHoldings();\n                alert(\"Success!\");\n            } catch (err) {\n                alert(err?.data?.message);\n            }\n        }\n    };\n    return (\n        <div className=\"tabBody\">\n            <BoxTemplate\n                leftHeader={\"From\"}\n                right={coin[0]}\n                value={amountFrom}\n                onChange={(e) => onChangeAmtFrm(e)}\n            />\n            <div className=\"swapIcon\" onClick={() => rev()}>\n                <MdSwapVert />\n            </div>\n            <BoxTemplate\n                leftHeader={\"To\"}\n                right={coin[1]}\n                value={amountTo}\n                onChange={(e) => onChangeAmtTo(e)}\n            />\n            <div className=\"bottomDiv\">\n                <div className=\"btn\" onClick={() => onSwap()}>\n                    Swap\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { MdAdd } from \"react-icons/md\";\nimport { useState } from \"react\";\nimport \"../styles.css\";\nimport BoxTemplate from \"./BoxTemplate\";\nimport { PRECISION } from \"../constants\";\n\nexport default function ProvideComponent(props) {\n    const [amountOfKar, setAmountOfKar] = useState(0);\n    const [amountOfKothi, setAmountOfKothi] = useState(0);\n    const [error, setError] = useState(\"\");\n\n    // Gets estimates of a token to be provided in the pool given the amount of other token\n    const getProvideEstimate = async (token, value) => {\n        if ([\"\", \".\"].includes(value)) return;\n        if (props.contract !== null) {\n            try {\n                let estimate;\n                if (token === \"KAR\") {\n                    estimate = await props.contract.getEquivalentToken2Estimate(\n                        value * PRECISION\n                    );\n                    setAmountOfKothi(estimate / PRECISION);\n                } else {\n                    estimate = await props.contract.getEquivalentToken1Estimate(\n                        value * PRECISION\n                    );\n                    setAmountOfKar(estimate / PRECISION);\n                }\n            } catch (err) {\n                if (err?.data?.message?.includes(\"Zero Liquidity\")) {\n                    setError(\"Message: Empty pool. Set the initial conversion rate.\");\n                } else {\n                    alert(err?.data?.message);\n                }\n            }\n        }\n    };\n\n    const onChangeAmountOfKar = (e) => {\n        setAmountOfKar(e.target.value);\n        getProvideEstimate(\"KAR\", e.target.value);\n    };\n\n    const onChangeAmountOfKothi = (e) => {\n        setAmountOfKothi(e.target.value);\n        getProvideEstimate(\"KOTHI\", e.target.value);\n    };\n\n    // Adds liquidity to the pool\n    const provide = async () => {\n        if ([\"\", \".\"].includes(amountOfKar) || [\"\", \".\"].includes(amountOfKothi)) {\n            alert(\"Amount should be a valid number\");\n            return;\n        }\n        if (props.contract === null) {\n            alert(\"Connect to Metamask\");\n            return;\n        } else {\n            try {\n                let response = await props.contract.provide(\n                    amountOfKar * PRECISION,\n                    amountOfKothi * PRECISION\n                );\n                await response.wait();\n                setAmountOfKar(0);\n                setAmountOfKothi(0);\n                await props.getHoldings();\n                alert(\"Success\");\n                setError(\"\");\n            } catch (err) {\n                err && alert(err?.data?.message);\n            }\n        }\n    };\n\n    return (\n        <div className=\"tabBody\">\n            <BoxTemplate\n                leftHeader={\"Amount of KAR\"}\n                value={amountOfKar}\n                onChange={(e) => onChangeAmountOfKar(e)}\n            />\n            <div className=\"swapIcon\">\n                <MdAdd />\n            </div>\n            <BoxTemplate\n                leftHeader={\"Amount of KOTHI\"}\n                value={amountOfKothi}\n                onChange={(e) => onChangeAmountOfKothi(e)}\n            />\n            <div className=\"error\">{error}</div>\n            <div className=\"bottomDiv\">\n                <div className=\"btn\" onClick={() => provide()}>\n                    Provide\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport \"../styles.css\";\nimport BoxTemplate from \"./BoxTemplate\";\nimport { PRECISION } from \"../constants.js\";\n\nexport default function WithdrawComponent(props) {\n    const [amountOfShare, setAmountOfShare] = useState(0);\n    const [estimateTokens, setEstimateTokens] = useState([]);\n    const onChangeAmountOfShare = async (e) => {\n        setAmountOfShare(e.target.value);\n        if (![\"\", \".\"].includes(e.target.value) && props.contract !== null) {\n            try {\n                let response = await props.contract.getWithdrawEstimate(\n                    e.target.value * PRECISION\n                );\n                setEstimateTokens([\n                    response.amountToken1 / PRECISION,\n                    response.amountToken2 / PRECISION,\n                ]);\n            } catch (err) {\n                alert(err?.data?.message);\n            }\n        }\n    };\n\n    // Gets the maximun share one can withdraw\n    const getMaxShare = async () => {\n        if (props.contract !== null) {\n            setAmountOfShare(props.maxShare);\n            let response = await props.contract.getWithdrawEstimate(\n                props.maxShare * PRECISION\n            );\n            setEstimateTokens([\n                response.amountToken1 / PRECISION,\n                response.amountToken2 / PRECISION,\n            ]);\n        } else alert(\"Connect to Metamask\");\n    };\n\n    // Withdraws the share\n    const withdrawShare = async () => {\n        if ([\"\", \".\"].includes(amountOfShare)) {\n            alert(\"Amount should be a valid number\");\n            return;\n        }\n        if (props.maxShare < amountOfShare) {\n            alert(\"Amount should be less than your max share\");\n            return;\n        }\n        if (props.contract === null) {\n            alert(\"Connect to Metamask\");\n            return;\n        } else {\n            try {\n                let response = await props.contract.withdraw(amountOfShare * PRECISION);\n                console.log(response);\n                await response.wait();\n                setAmountOfShare(0);\n                setEstimateTokens([]);\n                await props.getHoldings();\n                alert(\"Success!\");\n            } catch (err) {\n                alert(err?.data?.message);\n            }\n        }\n    };\n    return (\n        <div className=\"tabBody\">\n            <BoxTemplate\n                leftHeader={\"Amount:\"}\n                right={\n                    <div onClick={() => getMaxShare()} className=\"getMax\">\n                        Max\n                    </div>\n                }\n                value={amountOfShare}\n                onChange={(e) => onChangeAmountOfShare(e)}\n            />\n            {estimateTokens.length > 0 && (\n                <div className=\"withdrawEstimate\">\n                    <div className=\"amount\">Amount of Kar: {estimateTokens[0]}</div>\n                    <div className=\"amount\">Amount of Kothi: {estimateTokens[1]}</div>\n                </div>\n            )}\n            <div className=\"bottomDiv\">\n                <div className=\"btn\" onClick={() => withdrawShare()}>\n                    Withdraw\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport \"../styles.css\";\nimport BoxTemplate from \"./BoxTemplate\";\nimport { PRECISION } from \"../constants\";\n\nexport default function FaucetComponent(props) {\n    const [amountOfKar, setAmountOfKar] = useState(0);\n    const [amountOfKothi, setAmountOfKothi] = useState(0);\n\n    const onChangeAmountOfKothi = (e) => {\n        setAmountOfKothi(e.target.value);\n    };\n\n    const onChangeAmountOfKar = (e) => {\n        setAmountOfKar(e.target.value);\n    };\n\t\n    // Funds the account with given amount of Tokens \n    async function onClickFund() {\n        if (props.contract === null) {\n            alert(\"Connect to Metamask\");\n            return;\n        }\n        if ([\"\", \".\"].includes(amountOfKar) || [\"\", \".\"].includes(amountOfKothi)) {\n            alert(\"Amount should be a valid number\");\n            return;\n        }\n        try {\n            let response = await props.contract.faucet(\n                amountOfKar * PRECISION,\n                amountOfKothi * PRECISION\n            );\n            let res = await response.wait();\n            console.log(\"res\", res);\n            setAmountOfKar(0);\n            setAmountOfKothi(0);\n            await props.getHoldings();\n            alert(\"Success\");\n        } catch (err) {\n            err?.data?.message && alert(err?.data?.message);\n            console.log(err);\n        }\n    }\n\n    return (\n        <div className=\"tabBody\">\n            <BoxTemplate\n                leftHeader={\"Amount of KAR\"}\n                right={\"KAR\"}\n                value={amountOfKar}\n                onChange={(e) => onChangeAmountOfKar(e)}\n            />\n            <BoxTemplate\n                leftHeader={\"Amount of KOTHI\"}\n                right={\"KOTHI\"}\n                value={amountOfKothi}\n                onChange={(e) => onChangeAmountOfKothi(e)}\n            />\n            <div className=\"bottomDiv\">\n                <div className=\"btn\" onClick={() => onClickFund()}>\n                    Fund\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport \"../styles.css\";\nimport SwapComponent from \"./SwapComponent\";\nimport ProvideComponent from \"./ProvideComponent\";\nimport WithdrawComponent from \"./WithdrawComponent\";\nimport FaucetComponent from \"./FaucetComponent\";\nimport { PRECISION } from \"../constants\";\n\nexport default function ContainerComponent(props) {\n    const [activeTab, setActiveTab] = useState(\"Swap\");\n    const [amountOfKAR, setAmountOfKAR] = useState(0);\n    const [amountOfKOTHI, setAmountOfKOTHI] = useState(0);\n    const [amountOfShare, setAmountOfShare] = useState(0);\n    const [totalKAR, setTotalKAR] = useState(0);\n    const [totalKOTHI, setTotalKOTHI] = useState(0);\n    const [totalShare, setTotalShare] = useState(0);\n\n    useEffect(() => {\n        getHoldings();\n    });\n\n    // Fetch the pool details and personal assets details.\n    async function getHoldings() {\n        try {\n            console.log(\"Fetching holdings----\");\n            let response = await props.contract.getMyHoldings();\n            setAmountOfKAR(response.amountToken1 / PRECISION);\n            setAmountOfKOTHI(response.amountToken2 / PRECISION);\n            setAmountOfShare(response.myShare / PRECISION);\n\n            response = await props.contract.getPoolDetails();\n            setTotalKAR(response[0] / PRECISION);\n            setTotalKOTHI(response[1] / PRECISION);\n            setTotalShare(response[2] / PRECISION);\n        } catch (err) {\n            console.log(\"Couldn't Fetch holdings\", err);\n        }\n    }\n\n    const changeTab = (tab) => {\n        setActiveTab(tab);\n    };\n\n    return (\n        <div className=\"centerBody\">\n            <div className=\"centerContainer\">\n                <div className=\"selectTab\">\n                    <div\n                        className={\"tabStyle \" + (activeTab === \"Swap\" ? \"activeTab\" : \"\")}\n                        onClick={() => changeTab(\"Swap\")}\n                    >\n                        Swap\n                    </div>\n                    <div\n                        className={\n                            \"tabStyle \" + (activeTab === \"Provide\" ? \"activeTab\" : \"\")\n                        }\n                        onClick={() => changeTab(\"Provide\")}\n                    >\n                        Provide\n                    </div>\n                    <div\n                        className={\n                            \"tabStyle \" + (activeTab === \"Withdraw\" ? \"activeTab\" : \"\")\n                        }\n                        onClick={() => changeTab(\"Withdraw\")}\n                    >\n                        Withdraw\n                    </div>\n                    <div\n                        className={\n                            \"tabStyle \" + (activeTab === \"Faucet\" ? \"activeTab\" : \"\")\n                        }\n                        onClick={() => changeTab(\"Faucet\")}\n                    >\n                        Faucet\n                    </div>\n                </div>\n\n                {activeTab === \"Swap\" && (\n                    <SwapComponent\n                        contract={props.contract}\n                        getHoldings={() => getHoldings()}\n                    />\n                )}\n                {activeTab === \"Provide\" && (\n                    <ProvideComponent\n                        contract={props.contract}\n                        getHoldings={() => getHoldings()}\n                    />\n                )}\n                {activeTab === \"Withdraw\" && (\n                    <WithdrawComponent\n                        contract={props.contract}\n                        maxShare={amountOfShare}\n                        getHoldings={() => getHoldings()}\n                    />\n                )}\n                {activeTab === \"Faucet\" && (\n                    <FaucetComponent\n                        contract={props.contract}\n                        getHoldings={() => getHoldings()}\n                    />\n                )}\n            </div>\n            <div className=\"details\">\n                <div className=\"detailsBody\">\n                    <div className=\"detailsHeader\">Details</div>\n                    <div className=\"detailsRow\">\n                        <div className=\"detailsAttribute\">Amount of KAR:</div>\n                        <div className=\"detailsValue\">{amountOfKAR}</div>\n                    </div>\n                    <div className=\"detailsRow\">\n                        <div className=\"detailsAttribute\">Amount of KOTHI:</div>\n                        <div className=\"detailsValue\">{amountOfKOTHI}</div>\n                    </div>\n                    <div className=\"detailsRow\">\n                        <div className=\"detailsAttribute\">Your Share:</div>\n                        <div className=\"detailsValue\">{amountOfShare}</div>\n                    </div>\n                    <div className=\"detailsHeader\">Pool Details</div>\n                    <div className=\"detailsRow\">\n                        <div className=\"detailsAttribute\">Total KAR:</div>\n                        <div className=\"detailsValue\">{totalKAR}</div>\n                    </div>\n                    <div className=\"detailsRow\">\n                        <div className=\"detailsAttribute\">Total KOTHI:</div>\n                        <div className=\"detailsValue\">{totalKOTHI}</div>\n                    </div>\n                    <div className=\"detailsRow\">\n                        <div className=\"detailsAttribute\">Total Shares:</div>\n                        <div className=\"detailsValue\">{totalShare}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { ethers } from \"ethers\";\nimport { useState } from \"react\";\nimport { abi, CONTRACT_ADDRESS } from \"./constants\";\nimport ContainerComponent from \"./components/ContainerComponent\";\nimport \"./styles.css\";\n\nexport default function App() {\n    const [myContract, setMyContract] = useState(null);\n    const [address, setAddress] = useState();\n\n    let provider, signer, add;\n\n    // Connects to Metamask and sets the myContract state with a new instance of the contract\n    async function connect() {\n        let res = await connectToMetamask();\n        if (res === true) {\n            provider = new ethers.providers.Web3Provider(window.ethereum);\n            signer = provider.getSigner();\n            add = await signer.getAddress();\n            setAddress(add);\n            try {\n                const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, signer);\n                setMyContract(contract);\n            } catch (err) {\n                alert(\"CONTRACT_ADDRESS not set properly\");\n            }\n        } else {\n            alert(\"Couldn't connect to Metamask\");\n        }\n    }\n\n    // Helps open Metamask\n    async function connectToMetamask() {\n        try {\n            await window.ethereum.enable();\n            return true;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    return (\n        <div className=\"pageBody\">\n            <div className=\"navBar\">\n                <div className=\"appName\"> AMM </div>\n                {myContract === null ? (\n                    <div className=\"connectBtn\" onClick={() => connect()}>\n                        {\" \"}\n                        Connect to Metamask{\" \"}\n                    </div>\n                ) : (\n                    <div className=\"connected\"> {\"Connected to \" + address} </div>\n                )}\n            </div>\n            <ContainerComponent contract={myContract} connect={() => connect()} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}